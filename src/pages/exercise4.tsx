import Head from "next/head";

import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";

import BackToHomeButton from "@/components/BackButton";

const inter = Inter({ subsets: ["latin"] });

export default function Exercise4() {
  return (
    <>
      <Head>
        <title>Exercise 4</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <BackToHomeButton />
        <h2 className={inter.className}>Exercise 4</h2>
        <h3 className={inter.className}>How do I test my application</h3>
        <p className={inter.className}>
          I would design my application in a way that it was able to extract UI
          from the business logic.
        </p>
        <h4 className={inter.className}>Jest</h4>
        <p className={inter.className}>
          With the right architecture all ts functions could be easy tested with
          Jest. If we need to test a request I would mocked up the response body
          or the request body and try to match if it is as planned.
        </p>

        <h4 className={inter.className}>Testing hooks</h4>
        <p className={inter.className}>
          If the app request to test hooks I would use the{" "}
          <code>react-hooks-testing-library</code> which has a hook-oriented
          approach. So in order to have it in a clean architecture the app would
          need to have <code>useCallback</code> and <code>useState</code>{" "}
          detached from the UI code.
        </p>
        <h4 className={inter.className}>Testing styles: Storybook</h4>
        <p className={inter.className}>
          This is the funniest part, in my opinion. I would work closely to the
          design team in order to have all component as similar as possible.
          Even maybe create a design system!? why not.
        </p>
        <p className={inter.className}>
          Using this component-oriented approach we can create a simple library
          component when we could test buttons with different margins, colors,
          borders. Even placed in different background or device sizes.
        </p>
      </main>
    </>
  );
}
